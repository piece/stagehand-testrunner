# Copyright (c) 2011-2013 KUBO Atsuhiro <kubo@iteman.jp>,
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

parameters:
  # Component Factory
  component_aware_factory.class: "Stagehand\\ComponentFactory\\ComponentAwareFactory"
  component_aware_factory_factory.class: "Stagehand\\ComponentFactory\\ComponentAwareFactoryFactory"

  # Domain Components
  alteration_monitoring.class: "Stagehand\\TestRunner\\Process\\ContinuousTesting\\AlterationMonitoring"
  collecting_type.class: "Stagehand\\TestRunner\\Collector\\CollectingType"
  collecting_type_factory.class: "Stagehand\\TestRunner\\Collector\\CollectingTypeFactory"
  command_line_builder.class: "Stagehand\\TestRunner\\Process\\ContinuousTesting\\CommandLineBuilder"
  continuous_test_runner.class: "Stagehand\\TestRunner\\Process\\ContinuousTesting\\ContinuousTestRunner"
  legacy_proxy.class: "Stagehand\\TestRunner\\Util\\LegacyProxy"
  notifier.class: "Stagehand\\TestRunner\\Notification\\Notifier"
  os.class: "Stagehand\\TestRunner\\Util\\OS"
  output_buffering.class: "Stagehand\\TestRunner\\Util\\OutputBuffering"
  terminal.class: "Stagehand\\TestRunner\\CLI\\Terminal"
  test_runner.class: "Stagehand\\TestRunner\\Process\\TestRunner"
  test_target_repository.class: "Stagehand\\TestRunner\\Core\\TestTargetRepository"

  # Configuration Parameters
  recursive: false
  continuous_testing: false
  continuous_testing_watch_dirs: []
  notify_enabled: false     # available since Release 3.6.3X
  notify_file: ~            # available since Release 3.6.3X
  notify_project_name: ~    # available since Release 3.6.3X
  test_methods: []
  test_classes: []
  junit_xml_file: null
  junit_xml_realtime: false
  stop_on_failure: false
  test_file_pattern: ~
  test_resources: []
  detailed_progress: false

services:
  # Component Factory
  component_aware_factory_factory:
    class: "%component_aware_factory_factory.class%"
    calls:
      - [ setFactoryClass, [ "%component_aware_factory.class%" ] ]
      - [ setComponentFactory, [ "@component_factory" ] ]
  component_factory:
    synthetic: true

  # Util
  legacy_proxy:
    class: "%legacy_proxy.class%"
  os:
    class: "%os.class%"
    calls:
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]
  output_buffering:
    class: "%output_buffering.class%"
    calls:
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]

  # CLI
  input:
    synthetic: true
  output:
    synthetic: true
  terminal:
    class: "%terminal.class%"
    calls:
      - [ setInput, [ "@input" ] ]
      - [ setOutput, [ "@output" ] ]

  # Collector
  collecting_type:
    scope: prototype
    class: "%collecting_type.class%"
    calls:
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]
  collecting_type_factory:
    class: "%collecting_type_factory.class%"
    factory_service: component_aware_factory_factory
    factory_method: create
    arguments: [ "collecting_type", "%collecting_type_factory.class%" ]

  # Core
  environment:
    synthetic: true
  plugin:
    synthetic: true
  test_target_repository:
    class: "%test_target_repository.class%"
    arguments: [ "@plugin" ]
    calls:
      - [ setClasses, [ "%test_classes%" ] ]
      - [ setFilePattern, [ "%test_file_pattern%" ] ]
      - [ setMethods, [ "%test_methods%" ] ]
      - [ setResources, [ "%test_resources%" ] ]

  # Notification
  notifier:
    class: "%notifier.class%"
    arguments: [ "%notify_file%", "%notify_project_name%" ]
    calls:
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]
      - [ setOS, [ "@os" ] ]

  # Process
  alteration_monitoring:
    class: "%alteration_monitoring.class%"
  command_line_builder:
    class: "%command_line_builder.class%"
    arguments:
      - "@environment"
      - "@legacy_proxy"
      - "@os"
      - "@plugin"
      - "@runner"
      - "@terminal"
      - "@test_target_repository"
      - "@?command_line_option_builder"
      - "%notify_file%"
      - "%notify_project_name%"
  continuous_test_runner:
    class: "%continuous_test_runner.class%"
    arguments: [ "@preparer", "@command_line_builder" ]
    calls:
      - [ setAlterationMonitoring, [ "@alteration_monitoring" ] ]
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]
      - [ setNotifier, [ "@notifier" ] ]
      - [ setOS, [ "@os" ] ]
      - [ setRunner, [ "@runner" ] ]
      - [ setTestTargetRepository, [ "@test_target_repository" ] ]
      - [ setWatchDirs, [ "%continuous_testing_watch_dirs%" ] ]

  test_runner:
    class: "%test_runner.class%"
    arguments: [ "@preparer" ]
    calls:
      - [ setCollector, [ "@collector" ] ]
      - [ setNotifier, [ "@notifier" ] ]
      - [ setRunner, [ "@runner" ] ]
      - [ setOutputBuffering, [ "@output_buffering" ] ]

# Local Variables:
# mode: conf
# coding: iso-8859-1
# tab-width: 2
# c-basic-offset: 2
# c-hanging-comment-ender-p: nil
# indent-tabs-mode: nil
# End:
